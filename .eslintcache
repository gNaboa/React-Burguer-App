[{"C:\\Users\\guilh\\react-course\\burguerapp\\src\\index.js":"1","C:\\Users\\guilh\\react-course\\burguerapp\\src\\App.js":"2","C:\\Users\\guilh\\react-course\\burguerapp\\src\\components\\layout\\layout.jsx":"3","C:\\Users\\guilh\\react-course\\burguerapp\\src\\hoc\\auxi.jsx":"4","C:\\Users\\guilh\\react-course\\burguerapp\\src\\container\\burguerbuilder\\BurguerBuilder.jsx":"5","C:\\Users\\guilh\\react-course\\burguerapp\\src\\components\\Burger\\Burger.jsx":"6","C:\\Users\\guilh\\react-course\\burguerapp\\src\\components\\Burger\\BurgerIgredients\\BurgerIngredients.jsx":"7","C:\\Users\\guilh\\react-course\\burguerapp\\src\\components\\Burger\\BuildControls\\BuildControls.jsx":"8","C:\\Users\\guilh\\react-course\\burguerapp\\src\\components\\Burger\\BuildControls\\BuildControl\\BuildControl.jsx":"9"},{"size":190,"mtime":1611773245204,"results":"10","hashOfConfig":"11"},{"size":253,"mtime":1611795472890,"results":"12","hashOfConfig":"11"},{"size":382,"mtime":1611795821704,"results":"13","hashOfConfig":"11"},{"size":65,"mtime":1611773109986,"results":"14","hashOfConfig":"11"},{"size":1395,"mtime":1613167838849,"results":"15","hashOfConfig":"11"},{"size":796,"mtime":1612192304221,"results":"16","hashOfConfig":"11"},{"size":1201,"mtime":1612053013870,"results":"17","hashOfConfig":"11"},{"size":706,"mtime":1613167501983,"results":"18","hashOfConfig":"11"},{"size":475,"mtime":1613167520957,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"h5xauq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\guilh\\react-course\\burguerapp\\src\\index.js",[],["43","44"],"C:\\Users\\guilh\\react-course\\burguerapp\\src\\App.js",[],"C:\\Users\\guilh\\react-course\\burguerapp\\src\\components\\layout\\layout.jsx",[],"C:\\Users\\guilh\\react-course\\burguerapp\\src\\hoc\\auxi.jsx",["45"],"const ajudame = (props)=>props.children\r\n\r\nexport default ajudame","C:\\Users\\guilh\\react-course\\burguerapp\\src\\container\\burguerbuilder\\BurguerBuilder.jsx",["46"],"import React,{Component} from 'react'\r\nimport Auxi from '../../hoc/auxi'\r\nimport Burguer from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls.jsx'\r\n\r\n\r\nclass BurguerBuilder extends Component{\r\n\r\n\r\n    state={\r\n        igredients:{\r\n            salad:0,\r\n            meat:0,\r\n            bacon:0,\r\n            cheese:0\r\n        }\r\n    }\r\n\r\n\r\n     addIgredient = (type)=>{\r\n\r\n\r\n        const oldCount = this.state.igredients[type]\r\n        const updatedCount = oldCount+1\r\n        const updatedIgredients = {...this.state.igredients}\r\n        updatedIgredients[type]=updatedCount\r\n\r\n\r\n        this.setState({igredients:updatedIgredients})\r\n\r\n\r\n        \r\n    }\r\n   removeIgredient = (type ) =>{\r\n\r\n    \r\n\r\n    const oldCount = this.state.igredients[type]\r\n    if(oldCount==0){\r\n        return\r\n    }\r\n    const updatedCount = oldCount-1\r\n    const updatedIgredients = {...this.state.igredients}\r\n    updatedIgredients[type]=updatedCount\r\n\r\n\r\n    this.setState({igredients:updatedIgredients})\r\n\r\n   }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <Auxi>\r\n                <Burguer igredients={this.state.igredients}></Burguer>\r\n                <BuildControls  removeAgain={this.removeIgredient}  clickAgain={this.addIgredient}></BuildControls>\r\n            </Auxi>\r\n        )\r\n    }\r\n\r\n        \r\n}\r\n\r\n\r\nexport default BurguerBuilder","C:\\Users\\guilh\\react-course\\burguerapp\\src\\components\\Burger\\Burger.jsx",[],"C:\\Users\\guilh\\react-course\\burguerapp\\src\\components\\Burger\\BurgerIgredients\\BurgerIngredients.jsx",["47"],"import React from 'react'\r\nimport classes from './BurgerIngredients.module.css'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Igredients = (props) =>{\r\n\r\n   let igredients = null\r\n\r\n   switch(props.type){\r\n\r\n   case('bread-bottom'):\r\n       igredients = <div className={classes.BreadBottom}></div>\r\n       break\r\n   case('bread-top'):\r\n       igredients = (\r\n              <div className={classes.BreadTop}>\r\n                 <div className={classes.Seeds1}></div>\r\n                 <div className={classes.Seeds2}></div>\r\n              </div>\r\n       )\r\n       break\r\n   case('meat'):\r\n       igredients = <div className={classes.Meat}></div>\r\n       break\r\n   case('cheese'):\r\n       igredients = <div className={classes.Cheese}></div>\r\n       break\r\n   case('salad'):\r\n       igredients = <div className={classes.Salad}></div>\r\n       break\r\n   case('bacon'):\r\n       igredients = <div className={classes.Bacon}></div>\r\n       break\r\n\r\n       default:\r\n          igredients=null\r\n  \r\n       \r\n   }\r\n\r\n\r\n   \r\n   \r\n\r\n\r\n\r\n   return igredients;\r\n\r\n\r\n}\r\n\r\n    \r\n//igredients.propTypes={\r\n  // type:PropTypes.string.isRequired  //só aceita strings e é obrigatorio\r\n//}\r\n\r\n\r\nexport default Igredients",["48","49"],"C:\\Users\\guilh\\react-course\\burguerapp\\src\\components\\Burger\\BuildControls\\BuildControls.jsx",[],"C:\\Users\\guilh\\react-course\\burguerapp\\src\\components\\Burger\\BuildControls\\BuildControl\\BuildControl.jsx",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":7,"nodeType":"56","messageId":"57","endLine":1,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":39,"column":16,"nodeType":"60","messageId":"61","endLine":39,"endColumn":18},{"ruleId":"54","severity":1,"message":"62","line":4,"column":8,"nodeType":"56","messageId":"57","endLine":4,"endColumn":17},{"ruleId":"50","replacedBy":"63"},{"ruleId":"52","replacedBy":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'ajudame' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PropTypes' is defined but never used.",["65"],["66"],"no-global-assign","no-unsafe-negation"]